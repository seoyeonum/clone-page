<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team1.mybatis.INoticeDAO">
	
	<!-- 공지사항 유형 조회 -->
	<select id="listType" resultType="com.team1.dto.NoticeDTO">
		SELECT NOTICE_TYPE_ID, TYPE
		FROM NOTICE_TYPE
	</select>
	
	<!-- 공지사항 조회 -->
	<select id="listNotice" resultType="com.team1.dto.NoticeDTO">
		SELECT *
		FROM (
	        SELECT ROWNUM AS RNUM, DATA.*
	        FROM (
					SELECT N.NOTICE_ID, T.TYPE, N.SUBJECT, N.HITCOUNT, N.NOTICED_DATE
					FROM NOTICES N JOIN NOTICE_TYPE T
					ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
					ORDER BY N.NOTICED_DATE DESC
			) DATA
	        WHERE ROWNUM &lt;= #{end,jdbcType=INTEGER}
	    ) 
	    WHERE RNUM &gt;= #{start,jdbcType=INTEGER}
	</select>
	
	<!-- 공지사항 최근 5건만 조회 -->
	<select id="listNoticeLately" resultType="com.team1.dto.NoticeDTO">
		SELECT S.NOTICE_ID, S.TYPE, S.SUBJECT, S.HITCOUNT, S.NOTICED_DATE
		FROM
		(
		    SELECT N.NOTICE_ID, T.TYPE, N.SUBJECT, N.HITCOUNT, N.NOTICED_DATE
		    FROM NOTICES N JOIN NOTICE_TYPE T
		    ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
		    ORDER BY N.NOTICED_DATE DESC
		) S
		WHERE ROWNUM &lt;= 5
	</select>
	
	<!-- 공지사항 상세 열람 -->
	<select id="noticeDetail" resultType="com.team1.dto.NoticeDTO">
		SELECT N.NOTICE_ID, T.NOTICE_TYPE_ID, T.TYPE, N.SUBJECT, N.CONTENT, N.HITCOUNT, N.NOTICED_DATE
		FROM NOTICES N JOIN NOTICE_TYPE T
		ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
		WHERE N.NOTICE_ID = #{notice_id}
	</select>
	
	
	<!-- 공지사항 데이터 추가 -->	
	<insert id="add" parameterType="com.team1.dto.NoticeDTO">
	<selectKey keyProperty="notice_id" resultType="String" order="BEFORE">
		SELECT 'ANOT' || LPAD(SEQ_ANOT.NEXTVAL, 4, '0') 
		FROM DUAL
	</selectKey>
		INSERT INTO NOTICES VALUES(#{notice_id}, #{notice_type_id}, #{subject}, #{content}, 0, SYSDATE)
	</insert>
	
	<!-- 공지사항 수정 -->	
	<update id="modify" parameterType="com.team1.dto.NoticeDTO">
		UPDATE NOTICES
		SET NOTICE_TYPE_ID=#{notice_type_id}, SUBJECT=#{subject}, CONTENT=#{content}
		WHERE NOTICE_ID=#{notice_id}
	</update>
	
	<!-- 공지사항 삭제 -->	
	<delete id="remove" >
		DELETE
		FROM NOTICES
		WHERE NOTICE_ID=#{notice_id}
	</delete>
	
	<!-- 공지사항 검색 (제목) -->	
	<select id="searchSubject" resultType="com.team1.dto.NoticeDTO">
		SELECT *
		FROM (
	        SELECT ROWNUM AS RNUM, DATA.*
	        FROM (
				    SELECT N.NOTICE_ID, T.TYPE, N.SUBJECT, N.CONTENT, N.HITCOUNT, N.NOTICED_DATE
				    FROM NOTICES N
				    JOIN NOTICE_TYPE T 
			          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
				    <where>
				        <if test="search_text != null and search_text != ''">
				            AND N.SUBJECT LIKE '%' || #{search_text} || '%'
				        </if>
				    </where>
				    ORDER BY N.NOTICED_DATE DESC
	   			 ) DATA
	        WHERE ROWNUM &lt;= #{end,jdbcType=INTEGER}
	    ) 
	    WHERE RNUM &gt;= #{start,jdbcType=INTEGER}
	</select>
		
	<!-- 공지사항 검색 (내용) -->	
	<select id="searchContent" resultType="com.team1.dto.NoticeDTO">
		SELECT *
		FROM (
	        SELECT ROWNUM AS RNUM, DATA.*
	        FROM (
				    SELECT N.NOTICE_ID, T.TYPE, N.SUBJECT, N.CONTENT, N.HITCOUNT, N.NOTICED_DATE
				    FROM NOTICES N
				    JOIN NOTICE_TYPE T 
			          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
				    <where>
				        <if test="search_text != null and search_text != ''">
				            AND N.CONTENT LIKE '%' || #{search_text} || '%'
				        </if>
				    </where>
				    ORDER BY N.NOTICED_DATE DESC
				) DATA
	        WHERE ROWNUM &lt;= #{end,jdbcType=INTEGER}
	    ) 
	    WHERE RNUM &gt;= #{start,jdbcType=INTEGER}
	</select>
	
	<!-- 공지사항 검색 (제목+내용) -->	
	<select id="searchSubjectOrContent" resultType="com.team1.dto.NoticeDTO">
		SELECT *
		FROM (
	        SELECT ROWNUM AS RNUM, DATA.*
	        FROM (
				    SELECT N.NOTICE_ID, T.TYPE, N.SUBJECT, N.CONTENT, N.HITCOUNT, N.NOTICED_DATE
				    FROM NOTICES N
				    JOIN NOTICE_TYPE T 
			          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
				    <where>
				        <if test="search_text != null and search_text != ''">
				            AND ((N.SUBJECT LIKE '%' || #{search_text} || '%')
				            OR (N.CONTENT LIKE '%' || #{search_text} || '%'))
				        </if>
				    </where>
				    ORDER BY N.NOTICED_DATE DESC
				) DATA
	        WHERE ROWNUM &lt;= #{end,jdbcType=INTEGER}
	    ) 
	    WHERE RNUM &gt;= #{start,jdbcType=INTEGER}
	</select>
	
    <!-- 조회 수 1 씩 증가 -->
	<update id="increaseHit" parameterType="java.lang.String">
	    UPDATE NOTICES
	    SET HITCOUNT = HITCOUNT + 1
	    WHERE NOTICE_ID = #{notice_id}
	</update>

	<!-- 공지사항 게시물 수 확인 -->	
	<select id="count" resultType="java.lang.Integer">
		SELECT COUNT(*) AS COUNT
		FROM NOTICES
    </select>
    
    <!-- 공지사항 검색 (제목) 게시물 수 확인 -->	
	<select id="countSearchSubject" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS COUNT
	    FROM NOTICES N
	    JOIN NOTICE_TYPE T 
          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
	    <where>
	        <if test="search_text != null and search_text != ''">
	            AND N.SUBJECT LIKE '%' || #{search_text} || '%'
	        </if>
	    </where>
	    ORDER BY N.NOTICED_DATE DESC
	</select>
	
	<!-- 공지사항 검색 (내용) 게시물 수 확인 -->	
	<select id="countSearchContent" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS COUNT
	    FROM NOTICES N
	    JOIN NOTICE_TYPE T 
          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
	    <where>
	        <if test="search_text != null and search_text != ''">
	            AND N.CONTENT LIKE '%' || #{search_text} || '%'
	        </if>
	    </where>
	    ORDER BY N.NOTICED_DATE DESC
	</select>
	
	<!-- 공지사항 검색 (제목+내용) 게시물 수 확인 -->	
	<select id="countSearchSubjectOrContent" resultType="java.lang.Integer">
	    SELECT COUNT(*) AS COUNT
	    FROM NOTICES N
	    JOIN NOTICE_TYPE T 
          ON N.NOTICE_TYPE_ID = T.NOTICE_TYPE_ID
	    <where>
	        <if test="search_text != null and search_text != ''">
	            AND ((N.SUBJECT LIKE '%' || #{search_text} || '%')
	            OR (N.CONTENT LIKE '%' || #{search_text} || '%'))
	        </if>
	    </where>
	    ORDER BY N.NOTICED_DATE DESC
	</select>
</mapper>
